{"version":3,"file":"static/js/194.fc7c9789.chunk.js","mappings":"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","sources":["components/Backdrop/Backdrop.styled.jsx","components/Backdrop/Backdrop.jsx","components/LoginModal/LoginModal.styled.jsx","components/LoginModal/LoginModal.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const BackdropContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 1000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from 'react';\nimport { BackdropContainer } from './Backdrop.styled';\n\nexport const Backdrop = ({ onClick, children }) => {\n  \n  return (\n    <BackdropContainer onClick={onClick}>\n      {children}\n    </BackdropContainer>\n  );\n};\n\n","import styled from 'styled-components';\n\nexport const LoginContainer = styled.div`\n    background-color: #FFFFFF;\n    border: 1px solid #FFFFFF;\n    border-radius: 30px;\n    padding: 20px 20px 64px 64px;\n    position: relative;\n\n    @media (min-width: 480px) {\n        width: 480px; \n    }\n \n    @media (min-width: 768px) {\n        width: 566px;\n    }\n\n    @media (min-width: 1280px) {\n        width: 566px;\n    }\n`;\n\nexport const CloseIcon = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n`;\n\nexport const Header = styled.p`\n    font-family: 'Roboto-Medium', sans-serif;\n    font-size: 40px;\n    line-height: 48px;\n    letter-spacing: -0.8px; \n    margin-top: 28px;\n    color: #121417;\n`;\n\nexport const Desc = styled.p`\n    font-family: 'Roboto-Regular', sans-serif;\n    font-size: 16px;\n    line-height: 22px;\n    margin-top: 20px;\n    margin-bottom: 40px;\n    color: rgba(18, 20, 23, 0.8);\n`;\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    margin-right: 44px;\n`;\n\nexport const FormWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 18px;\n    margin-bottom: 40px;\n`;\n\nexport const PasswordContainer = styled.div`\n    width: 100%;\n    position: relative;\n`;\n\nexport const Password = styled.input`\n    border: 1px solid ${(props) => (props.$haserror ? '#D2042D' : props.$selcolor)};\n    border-radius: 12px;\n    padding: 16px 18px; \n    width: 100%;\n\n    &:focus {\n        border: 2px solid ${(props) => (props.$haserror ? '#D2042D' : props.$selcolor)};\n        box-shadow: 0 0 5px rgba(161, 157, 144, 0.7);\n    }\n\n    &::placeholder {\n        color: #121417;\n        font-family: 'Roboto-Regular', sans-serif;\n        font-size: 16px;\n        line-height: 22px;\n    }\n`;\n\nexport const PasswordErrorMsg = styled.p`\n    font-family: 'Roboto-Regular', sans-serif;\n    font-size: 12px;\n    color: #D2042D;\n    position: absolute;\n    bottom: -28px;\n    left: 9px;\n\n    @media (min-width: 768px) {\n        bottom: -14px;\n    }\n`;\n\nexport const EmailWrapper = styled.div`\n    width: 100%;\n    position: relative;\n`;\n\nexport const Email = styled.input`\n    border: 1px solid ${(props) => (props.$haserror ? '#D2042D' : props.$selcolor)};\n    border-radius: 12px;\n    padding: 16px 18px; \n    width: 100%;\n    position: relative;\n\n    &:focus {\n        border: 2px solid ${(props) => (props.$haserror ? '#D2042D' : props.$selcolor)};\n        box-shadow: 0 0 5px rgba(161, 157, 144, 0.7);\n    }\n\n    &::placeholder {\n        color: #121417;\n        font-family: 'Roboto-Regular', sans-serif;\n        font-size: 16px;\n        line-height: 22px;\n    }\n`;\n\nexport const EmailErrorMsg = styled.p`\n    font-family: 'Roboto-Regular', sans-serif;\n    font-size: 12px;\n    color: #D2042D;\n    position: absolute;\n    bottom: -14px;\n    left: 9px;\n`;\n\nexport const LoginBtn = styled.button`\n    background-color: ${({ $selcolor }) => $selcolor || '#F4C550'};\n    border: 1px solid ${({ $selcolor }) => $selcolor || '#F4C550'};\n    border-radius: 12px;\n    padding-top: 16px;\n    padding-bottom: 16px;\n    text-align: center;\n    color: #121417;\n    cursor: pointer;\n\n    font-family: 'Roboto-Bold',sans-serif;\n    font-size: 18px;\n    line-height: 28px; \n`;","import { useState, useEffect } from 'react';\nimport { IoMdClose } from \"react-icons/io\";\nimport { FaRegEye, FaRegEyeSlash } from \"react-icons/fa\";\nimport { useColor } from '../../context/ColorContext';\nimport { useModal } from '../../context/ModalContext';\nimport { Backdrop } from \"../Backdrop/Backdrop\";\nimport {\n    LoginContainer, CloseIcon,\n    Header, Desc, Form,\n    Email, Password, LoginBtn,\n    PasswordContainer, FormWrapper,\n    EmailErrorMsg, PasswordErrorMsg,\n    EmailWrapper\n} from './LoginModal.styled';\n\nexport const LoginModal = () => {\n    const { closeModal } = useModal();\n    const { selectedColor } = useColor();\n\n    const [email, setEmail] = useState('');\n    const [emailError, setEmailError] = useState('');\n\n    const [password, setPassword] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const [showPassword, setShowPassword] = useState(false);\n\n    const isEmailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n    const isPasswordValid = /^(?=.*[A-Za-z])(?=.*\\d).{8,}$/.test(password);\n\n    const handleInputChange = (field, value) => {\n        if (field === 'email') {\n            setEmail(value);\n        } else if (field === 'password') {\n            setPassword(value);\n        }\n    };\n\n    const handleTogglePasswordVisibility = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const validateFields = () => {\n        setEmailError(isEmailValid ? '' : 'Invalid email address');\n        setPasswordError(isPasswordValid ? '' : 'Password must be at least 8 characters with a number and a letter');\n    };\n\n    const handleClose = () => {\n        document.body.classList.remove('no-scroll');\n        closeModal();\n    };\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        validateFields();\n\n        if (isEmailValid && isPasswordValid) {\n            console.log('Email: ', email)\n            console.log('Password: ', password)\n            closeModal();\n        }\n    };\n\n    useEffect(() => {\n        const handleEscKey = (event) => {\n            if (event.keyCode === 27) {\n                closeModal();\n            }\n        };\n\n        window.addEventListener('keydown', handleEscKey);\n        return () => {\n            window.removeEventListener('keydown', handleEscKey);\n        };\n    }, [closeModal]);\n\n    return (\n        <Backdrop onClick={handleClose}>\n            <LoginContainer onClick={(e) => e.stopPropagation()} >\n                <CloseIcon >\n                    <IoMdClose style={{ width: '32px', height: '32px' }}\n                        onClick={handleClose}\n                    />\n                </CloseIcon>\n                <Header>Log In</Header>\n                <Desc>\n                    Welcome back! Please enter your credentials to access\n                    your account and continue your search for an teacher.\n                </Desc>\n                <Form onSubmit={handleLogin}>\n                    <FormWrapper>\n                        <EmailWrapper>\n                            <Email\n                                type=\"text\"\n                                placeholder=\"Email\"\n                                autoComplete='off'\n                                value={email}\n                                onBlur={validateFields}\n                                onChange={(e) => handleInputChange('email', e.target.value)}\n                                $haserror={Boolean(emailError)}\n                                $selcolor={selectedColor}\n                            />\n                            {emailError && <EmailErrorMsg>{emailError}</EmailErrorMsg>}\n                        </EmailWrapper>\n\n                        <PasswordContainer>\n                            <Password\n                                type={showPassword ? 'text' : 'password'}\n                                placeholder=\"Password\"\n                                autoComplete='off'\n                                value={password}\n                                onBlur={validateFields}\n                                onChange={(e) => handleInputChange('password', e.target.value)}\n                                $haserror={Boolean(passwordError)}\n                                $selcolor={selectedColor}\n                            />\n                            <FaRegEye\n                                onClick={handleTogglePasswordVisibility}\n                                style={{\n                                    position: 'absolute',\n                                    right: '10px',\n                                    top: '50%',\n                                    transform: 'translateY(-50%)',\n                                    cursor: 'pointer',\n                                    display: showPassword ? 'block' : 'none',\n                                }}\n                            />\n                            <FaRegEyeSlash\n                                onClick={handleTogglePasswordVisibility}\n                                style={{\n                                    position: 'absolute',\n                                    right: '10px',\n                                    top: '50%',\n                                    transform: 'translateY(-50%)',\n                                    cursor: 'pointer',\n                                    display: !showPassword ? 'block' : 'none',\n                                }}\n                            />\n                            {passwordError && <PasswordErrorMsg>{passwordError}</PasswordErrorMsg>}\n                        </PasswordContainer>\n                    </FormWrapper>\n                    <LoginBtn type=\"submit\" $selcolor={selectedColor}>Log In</LoginBtn>\n                </Form>\n            </LoginContainer>\n        </Backdrop>\n    );\n};"],"names":["BackdropContainer","styled","div","_templateObject","_taggedTemplateLiteral","Backdrop","_ref","onClick","children","_jsx","LoginContainer","CloseIcon","_templateObject2","Header","p","_templateObject3","Desc","_templateObject4","Form","form","_templateObject5","FormWrapper","_templateObject6","PasswordContainer","_templateObject7","Password","input","_templateObject8","props","$haserror","$selcolor","PasswordErrorMsg","_templateObject9","EmailWrapper","_templateObject10","Email","_templateObject11","EmailErrorMsg","_templateObject12","LoginBtn","button","_templateObject13","_ref2","LoginModal","closeModal","useModal","selectedColor","useColor","email","setEmail","useState","emailError","setEmailError","password","setPassword","passwordError","setPasswordError","showPassword","setShowPassword","isEmailValid","test","isPasswordValid","handleInputChange","field","value","handleTogglePasswordVisibility","validateFields","handleClose","document","body","classList","remove","useEffect","handleEscKey","event","keyCode","window","addEventListener","removeEventListener","_jsxs","e","stopPropagation","IoMdClose","style","width","height","onSubmit","preventDefault","console","log","type","placeholder","autoComplete","onBlur","onChange","target","Boolean","FaRegEye","position","right","top","transform","cursor","display","FaRegEyeSlash"],"sourceRoot":""}